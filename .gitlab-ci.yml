stages: [build, test, deploy, production]

build:
  image: docker:dind
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA

test:
  image:
    name: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    entrypoint: ["/bin/sh", "-c"]
  stage: test
  variables:
    POSTGRES_DB: electeez
    POSTGRES_USER: electeez
    POSTGRES_PASSWORD: test
    DB_HOST: postgres
    DB_USER: electeez
    DB_PASS: test
    DB_NAME: electeez
    DB_ENGINE: django.db.backends.postgresql
    MEMCACHED_HOST: memcached
  services:
    - name: yourlabs/tezos
      alias: tz
    - name: memcached:1.6-alpine
    - name: postgres:latest
      command:
        - "postgres"
        - "-c"
        - "log_min_duration_statement=300"
  script:
    - pytest -sv

tmig:
  image: yourlabs/ansible
  stage: deploy
  environment:
    name: tmig
    url: https://tmig.electeez.com
  only:
    refs:
      - tmig
  before_script:
    - mkdir -p ~/.ssh; echo "$MASTER_SSH_KEY" > ~/.ssh/id_ed25519; echo "$SSH_FINGERPRINTS" > ~/.ssh/known_hosts; chmod 700 ~/.ssh; chmod 600 ~/.ssh/*
  script:
    - export $(echo $MASTER_ENV | xargs)
    - export $(echo $SMTP | xargs)
    - HOST=tmig.electeez.com
      PROTO=https
      DEFAULT_FROM_EMAIL=noreply@electeez.com
      ANSIBLE_FORCE_COLOR=1
      bigsudo
        yourlabs.compose
        home=/home/tmig
        compose_django_image=$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
        compose_django_build=
        compose=docker-compose.yml,docker-compose.persist.yml
        wait_grep=uwsgi
        master@electeez.com
        | tee deploy.log
    - grep unreachable=0 deploy.log &> /dev/null
    - grep failed=0 deploy.log &> /dev/null

master:
  image: yourlabs/ansible
  stage: deploy
  environment:
    name: master
    url: https://master.electeez.com
  only:
    refs:
      - master
  before_script:
    - mkdir -p ~/.ssh; echo "$MASTER_SSH_KEY" > ~/.ssh/id_ed25519; echo "$SSH_FINGERPRINTS" > ~/.ssh/known_hosts; chmod 700 ~/.ssh; chmod 600 ~/.ssh/*
  script:
    - export $(echo $MASTER_ENV | xargs)
    - export $(echo $SMTP | xargs)
    - HOST=master.electeez.com
      PROTO=https
      DEFAULT_FROM_EMAIL=noreply@electeez.com
      ANSIBLE_FORCE_COLOR=1
      bigsudo
        yourlabs.compose
        home=/home/master
        compose_django_image=$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
        compose_django_build=
        compose=docker-compose.yml,docker-compose.persist.yml
        wait_grep=uwsgi
        services=django
        master@electeez.com
        | tee deploy.log
    - grep unreachable=0 deploy.log &> /dev/null
    - grep failed=0 deploy.log &> /dev/null

production:
  image: yourlabs/ansible
  stage: production
  environment:
    name: production
    url: https://electeez.com
  when: manual
  only:
    refs:
      - master
      - production
  before_script:
    - mkdir -p ~/.ssh; echo "$PRODUCTION_SSH_KEY" > ~/.ssh/id_ed25519; echo "$SSH_FINGERPRINTS" > ~/.ssh/known_hosts; chmod 700 ~/.ssh; chmod 600 ~/.ssh/*
  script:
    - export $(echo $PROD_ENV | xargs)
    - export $(echo $SMTP | xargs)
    - HOST=electeez.com
      PROTO=https
      DEFAULT_FROM_EMAIL=noreply@electeez.com
      ANSIBLE_FORCE_COLOR=1
      bigsudo
        yourlabs.compose
        home=/home/production
        compose_django_image=$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
        compose_django_build=
        compose=docker-compose.yml,docker-compose.persist.yml
        wait_grep=uwsgi
        services=django
        production@electeez.com
        | tee deploy.log
    - grep unreachable=0 deploy.log &> /dev/null
    - grep failed=0 deploy.log &> /dev/null
