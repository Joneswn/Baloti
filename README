# ABOUT THE ELECTIS VOTING APP 

Electeez (electis.app) is an open source semi-decentralized voting platform. 

It is using  https://www.electionguard.vote/ for its voting engine and the Tezos blockchain (tezos.com) to store the results in the form of a smart contract pointing to an IPFS link with all the details to re run an encrypted tally. Electeez is aimed to be used for low stakes election where the organizer hosting the server can be trusted. We are looking to make it as easy as possible for people to participate but also as verifiable as possible for technical auditors (e.g re running the tally etc...) The elections are organized by a Guardian (Multi guardians are on our roadmap) he/she is in charge of the encryption key used for an election. The votes are encrypted and trackable you can therefore verify at the end of the election that your ballot is indeed conted (its name = hash) Individual Ballots are never decrypted the sum is done via a homeomorphic encryption (only the sum is decrypted) 

This project is developped by electis in partnership with Tezos via its foundation 

#MORE INFO
you can find more information about electis and electeez on https://www.electis.io/about
you can test an online version of electeez on https://www.electis.app  


###############################
##  INSTALLATION ON UBUNTU  ###
###############################

This readme and scripts are desinged for an Ubunutu install on localhost please adapt if using another distro.  

# UPDATE / UPGRADE SYSTEM
sudo apt update
sudo apt upgrade

# INSTALL / ELECTEEZ (ELECTIS.APP)
git clone https://gitlab.com/electisNGO/electeez.git
cd electeez

# INSTALL PYTHON (IDEALLY >=3.9)
sudo apt install python3.9-dev
sudo apt install python3.9-venv
python3.9 -m venv my_env

# LAUNCH VENV
source ./my_env/bin/activate
python -V #SHOULD BE 3.9+

# INSTALL / RUN POSTGRESQL
sudo apt-get install postgresql
sudo systemctl start postgresql

# INITIALIZE POSTGRESQL
sudo passwd postgres
su - postgres
createdb electeez 
createuser <your_user_id> 
exit

# INSTALL / RUN MEMCACHED
sudo apt install memcached
systemctl enable memcached
systemctl start memcached

# INSTALL IPFS 
Cf https://ipfs.io/ipns/dist.ipfs.io/#go-ipfs
ipfs init #relaunch if queue error
# in a new term 
ipfs daemon
#check if connected with 
ipfs swarm peers

# INSTALL DOCKER FOR TEZOS 
sudo apt  install docker.io
# in a new terminal (not working on ARM64)
sudo docker run --name tz --publish 8732:8732 yourlabs/tezos

# add tez alias to /etc/hosts
127.0.0.1 localhost tez

# INSTALL LIBS / PYTHON MODULES 
make 

# INITIALIZE THE DB FOR ELECTEEZ 
make data

# LAUNCH DJANGO SERVER 
make run

# MANUAL PROCESS TO CREATE A USER 
Add user -> sign-up -> check logs and copy the link -> login to test -> hit create -> stop server (CTRL+C)

# AFTER FIRST LOGIN UPDATE TEXTS TABLES WITH FR and EN Languages (editable in Admin) 
make lang

#HOW TO MAKE A USER ADMIN 
./manage.py shell_plus
u = User.objects.get(email="<your_user_email>")
u.is_superuser = True
u.is_staff = True
u.save()
quit()
make run #TO LAUNCH DJANGO

# EDIT ADMIN PANEL / BLOCKCHAIN
#only select blockchain fake under blockchain as active (if not creating a contract will crash)   
127.0.0.1:8000/admin

#ADD YOUR OWN BLOCKCHAIN / WALLET 


#YOU CAN NOW LAUNCH A LOCAL ELECTION
